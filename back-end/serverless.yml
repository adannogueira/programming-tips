service: programming-tips
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 128
  timeout: 10
  region: us-east-1
  profile: serverless-admin
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action: s3:getObject
          Resource: arn:aws:s3:::${env:BUCKET}/*
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
        - Effect: Allow
          Action: SNS:Publish
          Resource: !Ref TipMessages
  environment:
    USERS_TABLE: ${env:USERS_TABLE}
    REGION: ${env:REGION}
    SNS_TOPIC_ARN: ${env:SNS_TOPIC_ARN}
    SUBSCRIBE_ENDPOINT: ${env:SUBSCRIBE_ENDPOINT}
    MAILER_ENDPOINT: ${env:MAILER_ENDPOINT}
    TIPS_ENDPOINT: ${env:TIPS_ENDPOINT}
    SENDGRID_KEY: ${env:SENDGRID_KEY}
    EMAIL: ${env:EMAIL}

functions:
  tips:
    handler: app/getTips.getTips
    events:
      - http:
          path: tips
          method: get
          cors: true
  subscribe:
    handler: app/addSubscriber.addSubscriber
    events:
      - http:
          path: subscribe
          method: post
          cors: true
  staticMailer:
    handler: app/staticMailer.staticMailer
    events:
      - http:
          path: static-mailer
          method: post
          cors: true
  sendEmail:
    handler: app/sendEmail.sendEmail
    events:
      - http:
          path: send-email
          method: post
          cors: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${env:USERS_TABLE}
    TipMessages:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: tip-messages-${self:provider.stage}
    TipMessagesSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref TipMessages
        Protocol: email
        Endpoint: example@email.com
        DeliveryPolicy:
          healthyRetryPolicy:
            numRetries: 20
            minDelayTarget: 30
            maxDelayTarget: 600
            backoffFunction: exponential

plugins:
  - serverless-offline